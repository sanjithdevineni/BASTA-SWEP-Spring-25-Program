You are eating a candy bar that is made of pieces in a single row (e.g., a Toblerone). You can bite off 1, 2, or 3 pieces at a time. How many different ways can you eat a bar that is n pieces long?

Examples:
n = 1; answer= 1
n = 2; answer=2 {1 + 1, 2}
n=3; answer = 4 {1+ 1 +1, 1+ 2, 2+1, 3}
n=4; answer = 7 {1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2, 1+3, 3+1, }


Def solution(n):

# starting with 1 
# for i in range(n):
# f(n) = f(n-1) + f(n-2) + f(n-3)
Solution = []
Solution[0] = 1
Solution[1] = 2
Solution[2] = 4
For i in range(3, n):

Solution[i] = solution(i-1) + solution(i-2) + solution(i-3)

Return solution[n-1]


Time complexity: O(n)
Space complexity: O(n)


Def solution(n):

Solution = []
Solution[0] = 1
Solution[1] = 2
Solution[2] = 4


Def numways(n):

If n < 4:
		Return solution[n]

Solution[n] = numways(n-1) + numways(n-2) + numways(n-3)
Return solution[n]

Return numways[n]










